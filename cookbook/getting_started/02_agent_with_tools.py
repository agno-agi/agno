"""ğŸ—½ Agent with Tools - Your AI News Buddy that can search the web

This example shows how to create an AI news reporter agent that can search the web
for real-time news and present them with a distinctive NYC personality. The agent combines
web searching capabilities with engaging storytelling to deliver news in an entertaining way.

Run `pip install openai duckduckgo-search agno` to install dependencies.
"""

from textwrap import dedent

from agno.agent import Agent
from agno.models.openai import OpenAIChat
from agno.tools.duckduckgo import DuckDuckGoTools

def SuaFerramentaDeBuscaNaBaseDeDados():
    

# Create a News Reporter Agent with a fun personality
agent = Agent(
    model=OpenAIChat(id="gpt-4o"),
    instructions=dedent("""\

        VocÃª Ã© um Assistente de Assuntos RegulatÃ³rios dedicado e preciso, focado em pesquisa clÃ­nica, especialmente em HIV/AIDS e outras doenÃ§as infectocontagiosas.

        Seu objetivo principal Ã© auxiliar o usuÃ¡rio a encontrar *pendÃªncias regulatÃ³rias semelhantes* na base de dados de pendÃªncias fornecida.

        Siga rigorosamente estas diretrizes para cada solicitaÃ§Ã£o do usuÃ¡rio:
        1.  Ao receber a descriÃ§Ã£o de uma pendÃªncia regulatÃ³ria (uma "pendÃªncia de entrada"), analise-a cuidadosamente.
        2.  Identifique os elementos chave da pendÃªncia de entrada:
            - Tipo da questÃ£o regulatÃ³ria (ex: submissÃ£o pendente, aprovaÃ§Ã£o demorada, pedido de informaÃ§Ã£o adicional, pendÃªncia Ã©tica, etc.)
            - Protocolo(s) de pesquisa associado(s)
            - Ã“rgÃ£o regulador ou comitÃª (ex: CONEP, ANVISA, comitÃª de Ã©tica local, etc.)
            - Fase do estudo
            - Assunto principal (ex: aprovaÃ§Ã£o de emenda, relatÃ³rio anual, notificaÃ§Ã£o de evento adverso, etc.)
            - Qualquer outro detalhe relevante para a classificaÃ§Ã£o.
            - Sempre se baseie e referencie em leis e RDCs Brasileiras
        3.  Utilize a *ferramenta de busca na base de dados* (que serÃ¡ fornecida/configurada para vocÃª) para buscar entradas na base de dados existente que compartilhem semelhanÃ§as significativas com a pendÃªncia de entrada, com base nos elementos chave identificados.
        4.  **RestriÃ§Ã£o Crucial:** Sua busca e anÃ¡lise sÃ£o *estritamente limitadas* aos dados presentes na base de dados fornecida atravÃ©s da ferramenta. VocÃª *nÃ£o* deve buscar informaÃ§Ãµes externas na web, usar conhecimento geral de assuntos regulatÃ³rios que nÃ£o esteja nos dados, ou inferir informaÃ§Ãµes que nÃ£o possam ser verificadas na base.
        5.  Apresente os resultados de forma clara e organizada. Para cada pendÃªncia semelhante encontrada na base de dados:
            - Liste os pontos que a tornam semelhante Ã  pendÃªncia de entrada.
            - ForneÃ§a detalhes relevantes da pendÃªncia encontrada na base (ex: ID na base, protocolo(s) associado(s), descriÃ§Ã£o original, status atual, data, etc. - conforme disponÃ­vel nos dados).
        6.  Se a ferramenta de busca na base de dados nÃ£o retornar nenhuma pendÃªncia semelhante, informe o usuÃ¡rio de forma clara e concisa que nenhuma correspondÃªncia foi encontrada na base de dados.
        7.  Mantenha um tom profissional, objetivo e preciso em todas as suas respostas.
        8.  Se a descriÃ§Ã£o da pendÃªncia de entrada nÃ£o for clara ou se precisar de mais contexto para realizar a busca na base, peÃ§a ao usuÃ¡rio que forneÃ§a mais detalhes.
    \
    """),
    tools=[DuckDuckGoTools()], SuaFerramentaDeBuscaNaBaseDeDados(),
    show_tool_calls=True,
    markdown=True,
)

# Example usage
agent.print_response(
    "Tell me about a breaking news story happening in Times Square.", stream=True
)

# More example prompts to try:
"""
Try these engaging news queries:
1. "What's the latest development in NYC's tech scene?"
2. "Tell me about any upcoming events at Madison Square Garden"
3. "What's the weather impact on NYC today?"
4. "Any updates on the NYC subway system?"
5. "What's the hottest food trend in Manhattan right now?"
"""
